<Activity mc:Ignorable="sap sap2010" x:Class="ACME_ClickWorkItems" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strInvoiceFullData" Type="InArgument(x:String)" />
    <x:Property Name="out_Invoice" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>805.6,3788</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ACME_ClickWorkItems_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.BAF.Infrastructure.Entity</x:String>
      <x:String>UiPath.IntegrationService.Infrastructure.Descriptor</x:String>
      <x:String>UiPath.BAF.Infrastructure.Enums</x:String>
      <x:String>UiPath.BAF.Infrastructure.Telemetry</x:String>
      <x:String>UiPath.BAF.Infrastructure</x:String>
      <x:String>UiPath.BAF.Infrastructure.Connection</x:String>
      <x:String>UiPath.OpenAI.IntegrationService.Activities</x:String>
      <x:String>UiPath.IntegrationCore.Activities</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.BAF.Infrastructure.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.BAF.Infrastructure</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Infrastructure</AssemblyReference>
      <AssemblyReference>UiPath.OpenAI.IntegrationService.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Desc: return dictionary contain data of invoice&#xA;&#xA;PreCondition: Data not Empty&#xA;&#xA;Action : extraxct data from invoice text&#xA;&#xA;in_Arg :in_strInvoiceData&#xA;&#xA;&#xA;&#xA;&#xA;" DisplayName="ACME_Get Invoicre Data" sap:VirtualizedContainerService.HintSize="816,3723.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)]" Name="Invoice" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="753.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Start  Geting Data from Invoice text&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="753.6,3082.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="716.8,2811.2" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="App_Action" sap:VirtualizedContainerService.HintSize="654.4,2724.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="PreCondition (invoice text not empty)" sap:VirtualizedContainerService.HintSize="592,859.2" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[String.IsNullOrWhiteSpace(in_strInvoiceFullData)]" DisplayName="If Invocie Scrape Data Empty" sap:VirtualizedContainerService.HintSize="449.6,730.4" sap2010:WorkflowViewState.IdRef="If_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,316.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;the scrape data is empty&quot;]" />
                    <Throw DisplayName="Throw System Exception Fail to Scrap Data" Exception="[new SystemException(&quot;couldnot scrap data from pdf &quot;)]" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Throw_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Throw>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;the scrape data scrap scucess &quot;]" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence DisplayName="Action(Build Invoice Dictionary)" sap:VirtualizedContainerService.HintSize="592,724" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strInvoiceNumber" />
                <Variable x:TypeArguments="x:String" Name="strVenderorName" />
                <Variable x:TypeArguments="x:String" Name="strInvoiceDate" />
                <Variable x:TypeArguments="x:String" Name="strTaxID" />
                <Variable x:TypeArguments="x:String" Name="strItemDescription" />
                <Variable x:TypeArguments="x:String" Name="strSubTotal" />
                <Variable x:TypeArguments="x:String" Name="strTaxAmount" />
                <Variable x:TypeArguments="x:String" Name="strTotal" />
                <Variable x:TypeArguments="x:String" Name="strCurrency" />
                <Variable x:TypeArguments="x:String" Name="strResult" />
                <Variable x:TypeArguments="s:String[]" Name="arrResult" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code=" System.Text.RegularExpressions.Regex invoiceNumberRegex = new System.Text.RegularExpressions.Regex(@&quot;Invoice (ID:|No.) (\d+)&quot;); &#xD;&#xA; System.Text.RegularExpressions.Regex venderNameRegex = new System.Text.RegularExpressions.Regex(@&quot;Vendor: (.+?) (Address|Tax|Client)&quot;);&#xD;&#xA; System.Text.RegularExpressions.Regex dateRegex = new System.Text.RegularExpressions.Regex(@&quot;Date: (\d{4}-\d{1,2}-\d{1,2})&quot;);&#xD;&#xA; System.Text.RegularExpressions.Regex taxIDRgex = new System.Text.RegularExpressions.Regex(@&quot;Tax ID: ([A-Za-z0-9]+) &quot;);&#xD;&#xA; System.Text.RegularExpressions.Regex subtotalRegex = new System.Text.RegularExpressions.Regex(@&quot;Subtotal: (\d+(?:\.\d)?)&quot;);&#xD;&#xA; System.Text.RegularExpressions.Regex taxAmountRegex = new System.Text.RegularExpressions.Regex(@&quot;Tax: (\d+(?:\.\d+)?)&quot;);&#xD;&#xA; System.Text.RegularExpressions.Regex itemDescriptionRegex = new System.Text.RegularExpressions.Regex(@&quot;Total (?:(\d+) )?(.+?) (\d+)&quot;);&#xD;&#xA; System.Text.RegularExpressions.Regex totalRegex = new System.Text.RegularExpressions.Regex(@&quot;Total: (\d+(?:\.\d+)?) ([A-Za-z]+)&quot;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; System.Text.RegularExpressions.Match invoiceNumberMatch = invoiceNumberRegex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match venderorNameMatch = venderNameRegex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match dateMatch = dateRegex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match taxIDMatch =taxIDRgex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match itemDescriptionMatch = itemDescriptionRegex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match subtotalMatch  = subtotalRegex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match  taxAmountMatch = taxAmountRegex.Match(in_strInvoiceAllData);&#xD;&#xA; System.Text.RegularExpressions.Match totalMatch = totalRegex.Match(in_strInvoiceAllData);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; out_strInvoiceNumber = invoiceNumberMatch.Groups[2].Value.Trim();&#xD;&#xA; out_strVenderorName = venderorNameMatch.Groups[1].Value.Trim();&#xD;&#xA; out_strInvoiceDate = dateMatch.Groups[1].Value.Trim();&#xD;&#xA; out_strTaxID = taxIDMatch.Groups[1].Value.Trim();&#xD;&#xA; out_strItemDescription = itemDescriptionMatch.Groups[2].Value.Trim();&#xD;&#xA; out_strSubtotal = subtotalMatch.Groups[1].Value.Trim();&#xD;&#xA;out_strTaxAmount = taxAmountMatch.Groups[1].Value.Trim();&#xD;&#xA;out_strTotal = totalMatch.Groups[1].Value.Trim() ;&#xD;&#xA;out_strCurrency = totalMatch.Groups[2].Value.Trim();" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="478.4,204.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strInvoiceAllData">[in_strInvoiceFullData]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceNumber">[strInvoiceNumber]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strVenderorName">[strVenderorName]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strInvoiceDate">[strInvoiceDate]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strTaxID">[strTaxID]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strItemDescription">[strItemDescription]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strSubtotal">[strSubTotal]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strTaxAmount">[strTaxAmount]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strTotal">[strTotal]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key=" out_strCurrency">[strCurrency]</OutArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
              <ui:MultipleAssign DisplayName="Multiple Build dicInvoice" sap:VirtualizedContainerService.HintSize="478.4,390.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("InvoiceNumber")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strInvoiceNumber]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("VenderorName")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strVenderorName]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("InvoiceDate")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strInvoiceDate]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("TaxID")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strTaxID]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("ItemDescription")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strItemDescription]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("Subtotal")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strSubTotal]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("TaxAmount")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strTaxAmount]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("Total")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strSubTotal]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[Invoice("Currency")]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strCurrency]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
            </Sequence>
            <Sequence DisplayName="PostCondition (Dictionary not Empty)" sap:VirtualizedContainerService.HintSize="592,1029.6" sap2010:WorkflowViewState.IdRef="Sequence_36">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[not String.IsNullOrWhiteSpace(Invoice.Values(0).tostring)]" DisplayName="If Invocie Scrape Data Empty" sap:VirtualizedContainerService.HintSize="529.6,917.6" sap2010:WorkflowViewState.IdRef="If_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,373.6" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;the invoice not empty&quot;]" />
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Invoice]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Invoice]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416.8,382.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354.4,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;the invoice is empty  &quot;]" />
                    <Throw DisplayName="Throw System Exception Fail Build Dictionary Of Invocie" Exception="[new SystemException(&quot;couldnot get required data from invoice text &quot;)]" sap:VirtualizedContainerService.HintSize="354.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Throw>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="720,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="416,316.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;system exception in Get Invoice Data &quot;+vbNewLine+exception.Message]" />
              <Rethrow DisplayName="Rethrow System Exception " sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="753.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;End Getting invoice data  success! !.&quot;]" />
  </Sequence>
</Activity>